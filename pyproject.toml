[tool.poetry]
name = "kafka-app"
version = "0.1.0"
description = "Simple Kafka App to be tested"
authors = ["Enrico Deusebio <enrico.deusebio@canonical.com>"]
readme = "README.md"

[tool.poetry.scripts]
kafka-app = "kafka_app.main:app"

####################
#   DEPENDENCIES   #
####################

[tool.poetry.dependencies]
python = "^3.10"
typer = "^0.12.3"
kafka-python = ">=2.0"
pymongo = "^4.3.3"
pandas = ">2.0.0"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
black = ">=21.12b0"
isort = ">=5.10"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
codespell = "^2.1.0"
flake8 = ">=4.0.1"
Flake8-pyproject = ">=1.1.0"
mypy = ">=0.910"
pytest-mypy = ">=0.10.3"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest-cov = ">=3.0"
pytest = ">=6.2"
pytest-asyncio = ">0.21.0"
pytest-mock = ">=3.10"
juju = ">=3.4.0.0"

#####################
#   CUSTOMIZATION   #
#####################

# [tool.pytest.ini_options]
# addopts = "--doctest-modules --cov=./kafka_app"

[tool.flake8]
per-file-ignores = []
ignore = [
    # Ignored by black
    'E203', 'E266', 'E501', 'W503',
    # Ignored to conform to PEP257
    'D203', 'D212', 'D213', 'D214', 'D215', 'D404', 'D405', 'D406', 'D407', 'D408', 'D409', 'D410', 'D411',
    'D413', 'D415', 'D416', 'D417',
    # Ignored to work with Sphinx
    'RST303', 'RST304', 'RST307'
]
# line length is intentionally set to 80 here because black uses Bugbear
# See https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length for more details
max-line-length = "120"
max-complexity = "18"
select = ['B','C','D','E','F','W','T4','B9','RST','DAR']
docstring_style = "sphinx"

[tool.isort]
py_version = 3
profile = 'black'
known_first_party = ['kafka_app','tests']
skip_gitignore = true

[tool.mypy]
follow_imports = "silent"

[[tool.mypy.overrides]]
module = [
    "kafka.*", "typer", "pymongo.*", "juju.*", "pytest_asyncio"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
